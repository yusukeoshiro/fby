<apex:page showHeader="false" standardStylesheets="false" sidebar="false" applyBodyTag="false" docType="html-5.0" controller="DisposeController" lightningStylesheets="true">

<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/onsen/2.5.2/css/onsenui.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/onsen/2.5.2/css/onsen-css-components.min.css" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.5.0/angular.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/onsen/2.5.2/js/onsenui.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/onsen/2.5.2/js/angular-onsenui.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/angular-touch/1.5.0/angular-touch.min.js"></script>

  <style>
  body{
    font-family: "メイリオ", sans-serif;
  }
  .barcode-read{
    font-size: 32px;
  }

  .list-item__title {
    color: #1E88E5;
    margin-bottom: 1px;
    padding-left: 0px;
    font-size: 16px;
    font-weight: 500;
    height: 30px;
  }

  .expired {
    color: red;
    font-weight: 500;
  }

  .list-item::before {
    display: none;
  }

  .ons-carousel-item {
    display: table;
    text-align: center;
  }

  .list-item {
    transition: all 0.4s ease-in-out;
    left: 0%;
  }
  .list-item.onDelete {
    left: -20%;
  }

  .list-item-deletepanel {
    position: absolute;
    right: -20%;
    height: 100%;
    width: 20%;
    background-color: #F44336;
    line-height: 172px;
    text-align: center;
    color: white;
    transition: all 0.4s ease-in-out;
  }
  .list-item.onDelete .list-item-deletepanel {
    right: -20%;
  }

  .list-item.shrink {
    transform: scaleY(0);
  }
  </style>

</head>

<body>
  <div ng-app="my-app" ng-controller="AppController as app" ng-init="init();">
    <ons-navigator var="navi" page="warehouseSelect.html"></ons-navigator>
    <template id="warehouseSelect.html">
      <ons-page>
        <ons-toolbar class="toolbar--transparent">
          <div class="center">
            廃棄
          </div>
        </ons-toolbar>

        <div class="" style="text-align:center;">
          廃棄元の倉庫を選択してください。
          <div class="">
            <ons-select class="select">
              <select class="select-input" ng-model="ui.selectedWarehouseId" required="true" >
                <option ng-repeat="warehouse in warehouses1" value="{{warehouse.Id}}">
                  {{warehouse.Name}}
                </option>
              </select>
            </ons-select>
          </div>
        </div>

        <ons-bottom-toolbar>
          <button
          class="button--large--cta"
          style="width: 95%; margin: 0 auto;"
          ng-click="navi.pushPage('page1.html');"
          ng-disabled="!ui.selectedWarehouseId">
          次へ
        </button>
      </ons-bottom-toolbar>
    </ons-page>
  </template>
  <template id="page1.html">
    <ons-page>
        <ons-toolbar class="toolbar--transparent">
          <div class="center">廃棄</div>
        </ons-toolbar>
        <!-- ラベル -->
        <div style="text-align:center;">
          <span class="toolbar--transparent" >廃棄対象の在庫をスキャン</span>
        </div>

        <!-- VIRTUAL KEYBOARD -->
        <div style="overflow: hidden; position: relative; width: 1px; height: 1px; left: -500px">
          <input id="scan_pad" type="text" ng-model="ui.scannerValue2"  dl-enter-key="barcodeEntered();"/>
        </div>

        <div style="text-align:center;">
          <span class="barcode-read" >{{ ui.scannerValue2 || "待機中" }}</span>
        </div>

        <!--廃棄の画面 FBYリスト表示 -->
        <ul class="list" style="margin-top: 20px;">
          <li ng-attr-id="listItem_{{$index}}" class="list-item list-item--tappable list-item--chevron" ng-repeat="barcodeMoveLine in barcodeMoveLines">
            <div class="list-item__center">
              <div class="list-touch-body" style="width:100%" ng-swipe-left="onTouchDelete($index)" ng-click="onDeleteCancel($index)">
                <div class="boss" style="display: flex; width: 100%; padding-bottom: 10px;">
                  <div class="list-item__title list-item" style="flex: 9;">{{barcodeMoveLine.Name}}  @{{barcodeMoveLine.current_inventory__r.warehouse__r.Name}}</div>
                </div>
                <div class="list-item__subtitle">
                  <div class="test" style="padding-bottom: 10px; font-size: 110%; color: #ff0066; font-weight: 600;">
                    現在庫名: {{barcodeMoveLine.current_inventory__r.product_name__c}}
                  </div>
                  <div class="holder" style="display: flex;">
                    <div class="list-item-title" style="flex:3;">残数: {{barcodeMoveLine.remaining_quantity__c}} [個]</div>
                    <div class="list-item-title" style="flex:4;">賞味期限: <span class="{{ barcodeMoveLine.expiration_class }}">{{barcodeMoveLine.expiration_date__c}}</span></div>
                  </div>
                </div>
              </div>
              <div class="list-item-title" style="text-align:left; width:100%; padding-top: 10px">廃棄数:
                <ons-range style="width: 90%" min="1" step="1" max="{{ barcodeMoveLine.remaining_quantity__c }}" ng-model="barcodeMoveLine.disposeQuantity" ng-change="checkInput({{ barcodeMoveLine.disposeQuantity }}, $index)"></ons-range>
                <output ng-attr-id="out_{{$index}}" style="font-size: 18px;">{{ barcodeMoveLine.disposeQuantity }}</output>
              </div>
            </div>
            <div class="list-item-deletepanel" ng-click="deleteBarcodeMoveLine($index);">
              DELETE
            </div>
          </li>
        </ul>

        <ons-bottom-toolbar>
          <button class="button--large--cta" style="width: 95%; margin: 0 auto;" ng-click="saveBarcodeMove();" ng-disabled="!isReadyToSave()">
            確定
          </button>
        </ons-bottom-toolbar>
        <ons-fab position="top right" onclick="document.getElementById('scan_pad').focus();">
          scan
        </ons-fab>
      </ons-page>
    </template>

    <template id="page2.html">
      <ons-page>
        <ons-toolbar class="toolbar--transparent">
          <div class="center">廃棄</div>
        </ons-toolbar>

        <div style="margin-top: 100px;text-align:center;color:#b5cc18">
          <p>
            <span style="font-size: 32px;">
              Thank you!
            </span>
          </p>

          <p>
            <span style="font-size: 32px;">
              廃棄が完了しました!
            </span>
          </p>

          <span style="font-size: 128px;"><i class="fa fa-check-square-o" aria-hidden="true"></i></span>

          <p>
            もとの画面に戻ってください。
          </p>
        </div>
      </ons-page>
    </template>

  </div>

  <script>

  var module = angular.module('my-app', ['onsen', 'ngTouch']);
  module.controller('AppController', function($scope, $http,  $interval, $timeout) {
    $scope.scannerValue = "";
    $scope.warehouses1 = {!warehouses_s};
    $scope.ui = {};
    $scope.ui.selectedWarehouseId = "{!selectedWarehouseId}";
    $scope.ui.selectedExpirationType = "absolute"
    $scope.barcodeMoveLines = [];
    $scope.barcodeMoveLine = {};
    $scope.barcodeMoveLineIndex;
    $scope.onFocus = false;
    $scope.currentPage = {};

    $scope.init = function(){
      console.log("initialized...");
    }

    $scope.isSaveDisabled = function(barcodeMoveLine){
      barcodeMoveLine.shipped_quantity__c = 1;
      if( barcodeMoveLine.barcodes === undefined ){
        return true;
      }
      else{
        if( inventoryMoveLine.barcodes.length > 0 ){
          return false;
        }
        else{
          return true;
        }
      }
    }

    // FBY コードに関する話
    $scope.barcodeEntered = function(){
      $timeout(function(){
        $scope.addBarcodeMoveLine($scope.ui.scannerValue2);
        $scope.ui.scannerValue = "";
      }, 500)
    }

    $scope.isReadyToSave = function() {
        return $scope.barcodeMoveLines.length > 0;
    }

    $scope.onTouchDelete = function(index){
      var listItem = document.getElementById("listItem_"+index);
      // console.log("Delete index is = ", "listItem_"+index);
      listItem.classList.add("onDelete");
    }

    $scope.onDeleteCancel = function(index){
      var listItem = document.getElementById("listItem_"+index);
      // console.log("Cancel index is = ", "listItem_"+index);
      listItem.classList.remove("onDelete");
    }

    // ng-change で呼ばれるメソッド（Delay が必要）
    $scope.checkInput = function(shipped_quantity, index){
      var record = $scope.barcodeMoveLines[ index ];
      window.setTimeout(function(){
        (function(){
          var shippedNum = parseInt(document.getElementById("out_" + index).innerText);
          record.shipped_quantity__c = shippedNum;
        })()
      },100);
    }

    $scope.addBarcodeMoveLine = function(barcode){
      DisposeController.findBarcode( barcode, function( value, event ){
        if( event.statusCode == 200 ){
          value.expiration_class = "";
          //日付処理
          var convertDate = function(date){
            var dateObj = new Date(date);
            var today = new Date();
            today.setHours(0,0,0,0);
            if(date < today.getTime()) {
              value.expiration_class = "expired";
            }
            return dateObj.getFullYear() + "-" + (dateObj.getMonth()+1) + "-" + dateObj.getDate();
          }
          value.expiration_date__c = convertDate(parseFloat(value.expiration_date__c));
          value.disposeQuantity = 1;
          value.shipped_quantity__c = 1;

          if(!value.current_inventory__c){
            alert("このバーコードは在庫登録されていません。");
          }else if($scope.ui.selectedWarehouseId !== value.current_inventory__r.warehouse__c){
            alert("「廃棄元倉庫の在庫を選択してください。");
          }else{
              $scope.barcodeMoveLines.push(value);
              $scope.$apply();
            }
        }
        else{
          alert( event.message );
        }
      });
    }

    $scope.showBarcodeMoveLine = function( ivl, index ){
      $scope.barcodeMoveLineIndex = index;
      $scope.barcodeMoveLine = ivl;
      $scope.navi.pushPage("page1.html");
    }

    $scope.deleteBarcodeMoveLine = function(index){
      // console.log("start deletecancel")
      // var listItem = document.getElementById("listItem_"+index);
      // listItem.addEventListener("transitionend",function(){
      //   console.log("dom delete")
      //   $scope.barcodeMoveLines.splice(index, 1);
      // }, false);
      // listItem.classList.add("shrink");
      // console.log("class added")

      $scope.barcodeMoveLines.splice(index, 1);
    }

    $scope.newBarcodeMoveLine = function(){
      $scope.barcodeMoveLine = {};
      $scope.barcodeMoveLines.push($scope.barcodeMoveLine);
      $scope.barcodeMoveLineIndex = $scope.barcodeMoveLines.length - 1;
      $scope.navi.pushPage('page1.html');
    }

    $scope.saveBarcodeMove = function(){
      var data = [];
      for(var i=0; i < $scope.barcodeMoveLines.length; i++) {
        (function(moveline){
          console.log("test="+$scope.barcodeMoveLines.length);
          data.push({
            Id: moveline.Id,
            // ★★★★★★★★ Barcode__c に無いリレーション先の項目をセットしなければならない。。。
            warehouseId: moveline.current_inventory__r.warehouse__r.Id,
            shipped_quantity__c: moveline.shipped_quantity__c
          })
        })($scope.barcodeMoveLines[i])
      }

      DisposeController.saveDisposeBarcodeMove( JSON.stringify(data), function( value, event ){
        if( event.statusCode == 200 ){
          console.log("success = ", value);
          $scope.navi.pushPage('page2.html');
          $scope.$apply();
        }
        else{
          alert( event.message );
        }
      });
    }

  }).directive("dlEnterKey",function(){
    return function(scope, element, attrs) {

      element.bind("keydown keypress", function(event) {
        var keyCode = event.which || event.keyCode;

        // If enter key is pressed
        if (keyCode === 13) {
          scope.$apply(function() {
            // Evaluate the expression
            scope.$eval(attrs.dlEnterKey);
          });

          event.preventDefault();
        }
      });
    };
  });

  </script>
</body>


</apex:page>
